name: Update posts

on:
  workflow_dispatch:
    inputs:
      craftDocument:
        description: 'Craft Document Data'
        required: true
        type: string
env:
  CRAFT_DOCUMENT: ${{ github.event.inputs.craftDocument }}
  WORK_DIR: ./packages/rust-craft-data-process
  POST_DIR_FROM_WORK_DIR: ../../_contents/posts
  INPUT_JSON: input.json

jobs:
  print-craft-document-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to 'gh-pages' branch
      - uses: actions/checkout@v3
        with:
          ref: gh-branchs

      - name: Build rust-craft-data-process
        working-directory: $WORK_DIR
        run: cargo build --verbose

      - name: Create input file from dispatch input
        working-directory: $WORK_DIR
        run: echo $CRAFT_DOCUMENT > $INPUT_JSON

      - name: Create posts
        working-directory: $WORK_DIR
        run: cargo run --verbose ./$INPUT_JSON $POST_DIR_FROM_WORK_DIR

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HH
          # utcOffset: '+08:00'

      - name: Use current time
        env:
          TIME: '${{ steps.current-time.outputs.time }}'
          R_TIME: '${{ steps.current-time.outputs.readableTime }}'
          F_TIME: '${{ steps.current-time.outputs.formattedTime }}'
          YEAR: '${{ steps.current-time.outputs.year }}'
          DAY: '${{ steps.current-time.outputs.day }}'
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY

      # - name: Commit change
      # - uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     # Optional. Commit message for the created commit.
      #     # Defaults to "Apply automatic changes"
      #     commit_message: Automated Change

      #     # Optional. Options used by `git-commit`.
      #     # See https://git-scm.com/docs/git-commit#_options
      #     commit_options: '--no-verify --signoff'

      #     # Optional glob pattern of files which should be added to the commit
      #     # Defaults to all (.)
      #     # See the `pathspec`-documentation for git
      #     # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
      #     # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
      #     file_pattern: src/*.js tests/*.js *.php

      #     # Optional. Local file path to the repository.
      #     # Defaults to the root of the repository.
      #     repository: .

      #     # Optional commit user and author settings
      #     commit_user_name: My GitHub Actions Bot # defaults to "GitHub Actions"
      #     commit_user_email: my-github-actions-bot@example.org # defaults to "actions@github.com"
      #     commit_author: Author <actions@github.com> # defaults to author of the commit that triggered the run

      #     # Optional. Tag name being created in the local repository and
      #     # pushed to remtoe repository and defined branch.
      #     tagging_message: 'v1.0.0'

      #     # Optional. Option used by `git-status` to determine if the repository is
      #     # dirty. See https://git-scm.com/docs/git-status#_options
      #     status_options: '--untracked-files=no'

      #     # Optional. Options used by `git-add`.
      #     # See https://git-scm.com/docs/git-add#_options
      #     add_options: '-u'

      #     # Optional. Options used by `git-push`.
      #     # See https://git-scm.com/docs/git-push#_options
      #     push_options: '--force'

      #     # Optional. Disable dirty check and always try to create a commit and push
      #     skip_dirty_check: true

      #     # Optional. Skip internal call to `git fetch`
      #     skip_fetch: true

      #     # Optional. Skip internal call to `git checkout`
      #     skip_checkout: true

      #     # Optional. Prevents the shell from expanding filenames.
      #     # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
      #     disable_globbing: true

      #     # Optional. Create given branch name in local and remote repository.
      #     create_branch: true
